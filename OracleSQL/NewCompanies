--Score:30|Diff:Med

--Below code prepares a large table level by level
--with Inner Joins
SELECT DISTINCT CC,F,LM_COUNT,SM_COUNT,M_COUNT,E_COUNT FROM
(SELECT E, COUNT(E) OVER(PARTITION BY(CC)) E_COUNT,M,M_COUNT,SM,SM_COUNT,LM,LM_COUNT,CC,F FROM
(SELECT DISTINCT EMP.EMPLOYEE_CODE E,M,M_COUNT,SM,SM_COUNT,LM,LM_COUNT,CC,F FROM
(SELECT M,COUNT(M) OVER(PARTITION BY(CC)) M_COUNT,SM,SM_COUNT,LM,LM_COUNT,CC,F FROM
(SELECT DISTINCT MAN.MANAGER_CODE M,SM,SM_COUNT,LM,LM_COUNT,CC,F FROM
(SELECT SM,COUNT(SM) OVER(PARTITION BY(CC)) SM_COUNT,LM,LM_COUNT,CC,F FROM
(SELECT DISTINCT S_M.SENIOR_MANAGER_CODE SM,LM,LM_COUNT,CC,F FROM
(SELECT LM, COUNT(LM) OVER (PARTITION BY(CC)) LM_COUNT,CC,F FROM 
(SELECT DISTINCT L_M.LEAD_MANAGER_CODE LM,COM.COMPANY_CODE CC,COM.FOUNDER F FROM COMPANY COM
INNER JOIN LEAD_MANAGER L_M ON COM.COMPANY_CODE=L_M.COMPANY_CODE))
INNER JOIN SENIOR_MANAGER S_M ON S_M.LEAD_MANAGER_CODE=LM))
INNER JOIN MANAGER MAN ON MAN.SENIOR_MANAGER_CODE=SM))
INNER JOIN EMPLOYEE EMP ON EMP.MANAGER_CODE=M))
ORDER BY CC;


--Below code uses a common columnI(company_code) in every table to connect and prepare
--the desired result
SELECT C.COMPANY_CODE,C.FOUNDER,
(SELECT COUNT(DISTINCT L.LEAD_MANAGER_CODE) FROM LEAD_MANAGER L WHERE L.COMPANY_CODE=C.COMPANY_CODE),
(SELECT COUNT(DISTINCT SM.SENIOR_MANAGER_CODE) FROM SENIOR_MANAGER SM WHERE SM.COMPANY_CODE=C.COMPANY_CODE),
(SELECT COUNT(DISTINCT M.MANAGER_CODE) FROM MANAGER M WHERE M.COMPANY_CODE=C.COMPANY_CODE),
(SELECT COUNT(DISTINCT E.EMPLOYEE_CODE) FROM EMPLOYEE E WHERE E.COMPANY_CODE=C.COMPANY_CODE)
FROM COMPANY C
ORDER BY C.COMPANY_CODE;
